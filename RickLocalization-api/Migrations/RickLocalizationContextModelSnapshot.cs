// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RickLocalization_api.EF;

namespace RickLocalization_api.Migrations
{
    [DbContext(typeof(RickLocalizationContext))]
    partial class RickLocalizationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("RickLocalization_api.EF.Dimension", b =>
                {
                    b.Property<int>("Dimensionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Dimensionid");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("RickLocalization_api.EF.Morty", b =>
                {
                    b.Property<int>("Mortyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Mortyid");

                    b.ToTable("Mortys");
                });

            modelBuilder.Entity("RickLocalization_api.EF.Rick", b =>
                {
                    b.Property<int>("Rickid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Dimensionid")
                        .HasColumnType("int");

                    b.Property<int>("Mortyid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Rickid");

                    b.HasIndex("Dimensionid");

                    b.HasIndex("Mortyid");

                    b.ToTable("Ricks");
                });

            modelBuilder.Entity("RickLocalization_api.EF.Travel", b =>
                {
                    b.Property<int>("Traveid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DimensionIdSourceDimensionid")
                        .HasColumnType("int");

                    b.Property<int?>("DimensionIdTargetDimensionid")
                        .HasColumnType("int");

                    b.Property<int>("Rickid")
                        .HasColumnType("int");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Traveid");

                    b.HasIndex("DimensionIdSourceDimensionid");

                    b.HasIndex("DimensionIdTargetDimensionid");

                    b.HasIndex("Rickid");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("RickLocalization_api.EF.Rick", b =>
                {
                    b.HasOne("RickLocalization_api.EF.Dimension", "Dimension")
                        .WithMany()
                        .HasForeignKey("Dimensionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RickLocalization_api.EF.Morty", "Morty")
                        .WithMany()
                        .HasForeignKey("Mortyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimension");

                    b.Navigation("Morty");
                });

            modelBuilder.Entity("RickLocalization_api.EF.Travel", b =>
                {
                    b.HasOne("RickLocalization_api.EF.Dimension", "DimensionIdSource")
                        .WithMany()
                        .HasForeignKey("DimensionIdSourceDimensionid");

                    b.HasOne("RickLocalization_api.EF.Dimension", "DimensionIdTarget")
                        .WithMany()
                        .HasForeignKey("DimensionIdTargetDimensionid");

                    b.HasOne("RickLocalization_api.EF.Rick", "Rick")
                        .WithMany()
                        .HasForeignKey("Rickid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DimensionIdSource");

                    b.Navigation("DimensionIdTarget");

                    b.Navigation("Rick");
                });
#pragma warning restore 612, 618
        }
    }
}
